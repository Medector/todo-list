{"ast":null,"code":"var _jsxFileName = \"/Users/hectormedina/CODE/react/introduccionreact/src/App/AppUI.js\";\nimport React from \"react\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppUI(_ref) {\n  let {\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    completeTodo,\n    deleteTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n      total: totalTodos,\n      completed: completedTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n      searchValue: searchValue,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: searchedString.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AppUI;\nexport { AppUI };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"sources":["/Users/hectormedina/CODE/react/introduccionreact/src/App/AppUI.js"],"names":["React","TodoCounter","TodoList","TodoItem","TodoSearch","CreateTodoButton","AppUI","totalTodos","completedTodos","searchValue","setSearchValue","completeTodo","deleteTodo","searchedString","map","todo","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;;AAEA,SAASC,KAAT,OAQE;AAAA,MARa;AACXC,IAAAA,UADW;AAEXC,IAAAA,cAFW;AAGXC,IAAAA,WAHW;AAIXC,IAAAA,cAJW;AAKXC,IAAAA,YALW;AAMXC,IAAAA;AANW,GAQb;AAEE,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA,QAAC,WAAD;AACA,MAAA,KAAK,EAAIL,UADT;AAEA,MAAA,SAAS,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA,YADA,eAMF,QAAC,UAAD;AACI,MAAA,WAAW,EAAIC,WADnB;AAEI,MAAA,cAAc,EAAIC;AAFtB;AAAA;AAAA;AAAA;AAAA,YANE,eAYF,QAAC,QAAD;AAAA,gBACGG,cAAc,CAACC,GAAf,CAAmBC,IAAI,iBAExB,QAAC,QAAD;AAEA,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFX;AAGA,QAAA,UAAU,EAAI,MAAML,YAAY,CAACI,IAAI,CAACC,IAAN,CAHhC;AAIA,QAAA,QAAQ,EAAI,MAAMJ,UAAU,CAACG,IAAI,CAACC,IAAN;AAJ5B,SACKD,IAAI,CAACC,IADV;AAAA;AAAA;AAAA;AAAA,cAFC;AADH;AAAA;AAAA;AAAA;AAAA,YAZE,eA2BF,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YA3BE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCC;;KA1CIV,K;AA2CT,SAAQA,KAAR","sourcesContent":["import React from \"react\";\n\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\n\nfunction AppUI({\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    completeTodo,\n    deleteTodo,\n    \n}){\n\n    return (\n        <React.Fragment>\n        <TodoCounter\n        total = {totalTodos}\n        completed={completedTodos}\n        />\n          \n      <TodoSearch\n          searchValue = {searchValue}\n          setSearchValue = {setSearchValue}\n    \n      />\n    \n      <TodoList>\n        {searchedString.map(todo => \n        (\n        <TodoItem \n        key={todo.text} \n        text={todo.text}\n        onComplete = {() => completeTodo(todo.text)}\n        onDelete = {() => deleteTodo(todo.text)\n        }\n        /> \n        ))\n        \n        }\n          \n      </TodoList>\n      <CreateTodoButton/>\n    \n      </React.Fragment>    \n      );  \n    }\nexport {AppUI};"]},"metadata":{},"sourceType":"module"}