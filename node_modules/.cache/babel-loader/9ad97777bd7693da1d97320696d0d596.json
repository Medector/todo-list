{"ast":null,"code":"import React from\"react\";import{TodoContext}from\"../TodoContext\";import{TodoCounter}from\"../TodoCounter\";import{TodoList}from\"../TodoList\";import{TodoItem}from\"../TodoItem\";import{TodoSearch}from\"../TodoSearch\";import{CreateTodoButton}from\"../CreateTodoButton\";import{Modal}from\"../Modal\";import{TodoForm}from\"../TodoForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AppUI(){var _React$useContext=React.useContext(TodoContext),error=_React$useContext.error,loading=_React$useContext.loading,searchedString=_React$useContext.searchedString,deleteTodo=_React$useContext.deleteTodo,completeTodo=_React$useContext.completeTodo,openModal=_React$useContext.openModal,setOpenModal=_React$useContext.setOpenModal;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(TodoCounter,{}),/*#__PURE__*/_jsx(TodoSearch,{}),/*#__PURE__*/_jsxs(TodoList,{children:[loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading ... \\u23F0\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:\"Critical error\"}),!loading&&!searchedString.lenght&&/*#__PURE__*/_jsx(\"p\",{children:\"Create your first ToDo \"}),searchedString.map(function(todo){return/*#__PURE__*/_jsx(TodoItem,{text:todo.text,completed:todo.completed,onComplete:function onComplete(){return completeTodo(todo.text);},onDelete:function onDelete(){return deleteTodo(todo.text);}},todo.text);})]}),openModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(TodoForm,{})}),/*#__PURE__*/_jsx(CreateTodoButton,{setOpenModal:setOpenModal})]});}export{AppUI};","map":{"version":3,"sources":["/Users/hectormedina/CODE/react/todo-list/src/App/AppUI.js"],"names":["React","TodoContext","TodoCounter","TodoList","TodoItem","TodoSearch","CreateTodoButton","Modal","TodoForm","AppUI","useContext","error","loading","searchedString","deleteTodo","completeTodo","openModal","setOpenModal","lenght","map","todo","text","completed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,KAAT,KAAqB,UAArB,CACA,OAAQC,QAAR,KAAuB,aAAvB,C,wFAGA,QAASC,CAAAA,KAAT,EAAgB,CACZ,sBAQIT,KAAK,CAACU,UAAN,CAAiBT,WAAjB,CARJ,CAAOU,KAAP,mBAAOA,KAAP,CACIC,OADJ,mBACIA,OADJ,CAEIC,cAFJ,mBAEIA,cAFJ,CAGIC,UAHJ,mBAGIA,UAHJ,CAIIC,YAJJ,mBAIIA,YAJJ,CAKIC,SALJ,mBAKIA,SALJ,CAMIC,YANJ,mBAMIA,YANJ,CASA,mBAEI,MAAC,KAAD,CAAO,QAAP,yBACA,KAAC,WAAD,IADA,cAEA,KAAC,UAAD,IAFA,cAGJ,MAAC,QAAD,YACCL,OAAO,eAAI,yCADZ,CAECD,KAAK,eAAI,qCAFV,CAGC,CAACC,OAAD,EAAa,CAACC,cAAc,CAACK,MAA7B,eAAwC,8CAHzC,CAKCL,cAAc,CAACM,GAAf,CAAmB,SAAAC,IAAI,qBAExB,KAAC,QAAD,EAEA,IAAI,CAAEA,IAAI,CAACC,IAFX,CAGA,SAAS,CAAED,IAAI,CAACE,SAHhB,CAIA,UAAU,CAAI,4BAAMP,CAAAA,YAAY,CAACK,IAAI,CAACC,IAAN,CAAlB,EAJd,CAKA,QAAQ,CAAI,0BAAMP,CAAAA,UAAU,CAACM,IAAI,CAACC,IAAN,CAAhB,EALZ,EACKD,IAAI,CAACC,IADV,CAFwB,EAAvB,CALD,GAHI,CAoBHL,SAAS,eACN,KAAC,KAAD,wBACA,KAAC,QAAD,IADA,EArBA,cA0BJ,KAAC,gBAAD,EACI,YAAY,CAAEC,YADlB,EA1BI,GAFJ,CAkCH,CACD,OAAQR,KAAR","sourcesContent":["import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport  {Modal} from \"../Modal\";\nimport {TodoForm} from \"../TodoForm\"\n\n\nfunction AppUI(){\n    const {error,\n        loading,\n        searchedString,\n        deleteTodo,\n        completeTodo,   \n        openModal,\n        setOpenModal,\n    \n    } = React.useContext(TodoContext);\n    return (\n        \n        <React.Fragment>\n        <TodoCounter/>    \n        <TodoSearch/>\n    <TodoList>\n    {loading && <p>Loading ... ‚è∞</p>}\n    {error && <p>Critical error</p>}\n    {!loading && (!searchedString.lenght) && <p>Create your first ToDo </p>}\n\n    {searchedString.map(todo => \n    (\n    <TodoItem \n    key={todo.text} \n    text={todo.text}\n    completed={todo.completed}\n    onComplete = {() => completeTodo(todo.text)}\n    onDelete = {() => deleteTodo(todo.text)\n    }/> ))\n    }   \n  </TodoList>\n\n    {openModal && (\n        <Modal>\n        <TodoForm/>\n        </Modal>\n    )}\n      \n    <CreateTodoButton\n        setOpenModal={setOpenModal}\n    />\n    \n</React.Fragment>    \n      );  \n}\nexport {AppUI};"]},"metadata":{},"sourceType":"module"}